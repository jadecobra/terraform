# WIP - Instance fails

pause () {
    ls
    echo '\npress [Enter] to  continue...'
    read REPLY
}

brew install jq

projectName="learn-cdktf-typescript"
mkdir $projectName
cd $projectName
cdktf init --template="typescript" --local

echo 'Default cdktf.json'
cat cdktf.json
pause
echo "Adding AWS terraform provider..."
cat cdktf.json | jq '.terraformProviders += ["hashicorp/aws@~>3.42"]' > cdktf.json.tmp
mv cdktf.json.tmp cdktf.json
cat cdktf.json
pause

cdktf get

echo 'Default main.ts file'
cat main.ts
echo 'Replacing main.ts with'
cat << EOF > main.ts
import { Construct } from 'constructs';
import { App, TerraformStack, TerraformOutput } from 'cdktf';
import { AwsProvider, EC2 } from './.gen/providers/aws';


class MyStack extends TerraformStack {
    constructor(scope: Construct, name: string) {
        super(scope, name)
        new AwsProvider(this, 'aws', {
            region: 'us-east-1',
        })
        const instance = new EC2.Instance(this, 'compute', {
            ami: 'ami-01456a894f71116f2',
            instanceType: 't2.micro',
        })
        new TerraformOutput(this, 'public_ip', {
            value: instance.publicIp,
        })
    }
}

const app = new App();
new MyStack(app, '$projectName')
app.synth()
EOF
cat main.ts
pause

cdktf synth
cat cdktf.out/stacks/$projectName/cdk.tf.json
pause

cd ..
rm -rf $projectName
