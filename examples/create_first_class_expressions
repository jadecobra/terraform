import_helper() {
    local helper_path=/usr/local/bin/helper
    cat $helper_path || sudo curl https://raw.githubusercontent.com/jadecobra/arsenal/main/helper -o /usr/local/bin/helper
    source $helper_path
}

create_main_configuration() {
    write_data_to_file main.tf 'terraform {
    required_version = ">= 0.12.0"
}

provider "aws" {
    region = "us-west-2"
}

data "aws_ami" "ubuntu_14_04" {
    most_recent = true

    filter {
        name = "name"
        values = ["ubuntu/images/hvm/ubuntu-trusty-14.04-amd64-server-*"]
    }

    owners = ["099720109477"]
}

resource "aws_vpc" "my_vpc" {
    cidr_block = "172.16.0.0/16"

    tags = {
        Name = var.vpc_name
    }
}

resource "aws_subnet" "my_subnet" {
    vpc_id = aws_vpc.my_vpc.id
    cidr_block = "172.16.10.0/24"

    tags = {
        Name = "first-class-expressions"
    }
}

resource "aws_network_interface" "foo" {
    subnet_id = aws_subnet.my_subnet.id
    private_ips = ["172.16.10.100"]

    tags = {
        Name = "first-class-expressions-primary-network-interface"
    }
}

resource "aws_instance" "foo" {
    ami = data.aws_ami.ubuntu_14_04.image_id
    instance_type = "t2.micro"

    tags = {
        Name = "first-class-expressions-instance"
    }

    network_interface {
        network_interface_id = aws_network_interface.foo.id
        device_index = 0
    }
}'
}

create_outputs() {
    write_data_to_file outputs.tf 'output "private_dns" {
    value = aws_instance.foo.private_dns
}'
}

create_variables() {
    write_data_to_file variables.tf 'variable "vpc_name" {
    description = "name of the VPC"
    default = "first-class-expressions"
}'
}

import_helper

project_name="project_name"
rm -rf $project_name
create_and_go_to $project_name
ls -a
pwd

create_main_configuration
create_outputs
create_variables

tfswitch
export PATH=$PATH:$HOME/bin

terraform init
terraform fmt -recursive
terraform validate
terraform plan
